{"version":3,"sources":["webpack:///./src/components/template/TTimeIntervalSelect.vue?7b81","webpack:///src/components/template/TTimeIntervalSelect.vue","webpack:///./src/components/template/TTimeIntervalSelect.vue?fd5d","webpack:///./src/components/template/TTimeIntervalSelect.vue","webpack:///./src/components/template/disabledMixin.js","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","style","_b","model","value","callback","$$v","innerValue","expression","comboboxAttrs","staticRenderFns","name","props","data","type","Object","default","undefined","formDisabled","Boolean","mixins","disabledMixin","watch","disabled","handler","width","margin","backgroundColor","flexGrow","grow","flexShrink","shrink","marginTop","marginLeft","marginBottom","marginRight","dense","immediate","deep","newValue","$emit","created","component","VAutocomplete","VFlex","bindingData","deafult","computed","disabledConditions","updateDisabledConditions","newVal","methods","conditions","getDisabled","conditionsClone","JSON","parse","stringify","CONDITIONS_STR","Error","calculateDisabledConditions","String","when","is","leftOperand","operands","shift","leftVal","operators","length","operator","rightOperand","rightVal","nextOperator","unshift","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","currentRange","selectedItem","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","lastIndex","nextIndex","nextItem","clearableCallback","genInput","attrs","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event"],"mappings":"gJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,MAAON,EAAS,OAAG,CAACI,EAAG,iBAAiBJ,EAAIO,GAAG,CAACC,MAAM,CAACC,MAAOT,EAAc,WAAEU,SAAS,SAAUC,GAAMX,EAAIY,WAAWD,GAAKE,WAAW,eAAe,iBAAiBb,EAAIc,eAAc,KAAS,IAC1SC,EAAkB,G,wBCWtB,GACEC,KAAM,eAENC,MAAO,CACLC,KAAM,CACJC,KAAMC,OACNC,QAAS,cAEXZ,MAAO,CACLU,UAAMG,GAERC,aAAc,CACZJ,KAAM,CAACK,aAASF,GAChBD,aAASC,IAIbG,OAAQ,CAACC,EAAX,MAEER,KAnBF,WAoBI,MAAO,CACLZ,MAAO,GACPQ,cAAe,GACfF,WAAY,KAIhBe,MAAO,CACLC,SADJ,SACA,GACM3B,KAAKa,cAAcc,SAAW,GAEhCV,KAAM,CACJW,QADN,SACA,SACQ5B,KAAKK,MAAQ,CACXwB,MAAOZ,EAAKY,MACZC,OAAQb,EAAKa,OACbC,gBAAiBd,EAAKc,gBACtBC,SAAUf,EAAKgB,KACfC,WAAYjB,EAAKkB,OACjBC,UAAWnB,EAAKmB,UAChBC,WAAYpB,EAAKoB,WACjBC,aAAcrB,EAAKqB,aACnBC,YAAatB,EAAKsB,aAEpBvC,KAAKa,eAAb,GACU2B,MAAOvB,EAAKuB,OADtB,iBAEA,YAFA,yBAGA,QAHA,4BAIA,YAJA,gCAKA,GALA,4BAMA,eANA,6BAOA,CACU,UAAV,eARA,IAcMC,WAAW,EACXC,MAAM,GAERlC,MAlCJ,SAkCA,GACMR,KAAKW,WAAagC,GAEpBhC,WArCJ,SAqCA,GACMX,KAAK4C,MAAM,QAASD,KAIxBE,QArEF,WAsEI7C,KAAKW,WAAaX,KAAKQ,QClFiV,I,yDCOxWsC,EAAY,eACd,EACAhD,EACAgB,GACA,EACA,KACA,KACA,MAIa,aAAAgC,EAAiB,QAMhC,IAAkBA,EAAW,CAACC,gBAAA,KAAcC,QAAA,Q,kCCxB7B,QACbhC,MAAO,CACLC,KAAM,CACJC,KAAMC,OACNC,QAAS,cAEX6B,YAAa,CACX/B,KAAMC,OACN+B,QAAS,cAEX5B,aAAc,CACZJ,KAAM,CAACK,aAASF,GAChBD,aAASC,IAIb8B,SAAU,CACRxB,SADQ,WACG,MAIT,iBACE3B,KAAKsB,oBADP,QAE0B,eAAvBtB,KAAKiB,KAAKU,SACP3B,KAAKiB,KAAKU,SACV3B,KAAKoD,qBAKfnC,KA9Ba,WA+BX,MAAO,CACLmC,mBAAoB,OAIxB1B,MAAO,CACLuB,YAAa,CACXrB,QADW,SACHqB,GACN,IAAMG,EAAqBpD,KAAKiB,KAAK,sBACrCjB,KAAKqD,yBAAyBD,EAAoBH,IAEpDR,WAAW,EACXC,MAAM,GAER,0BAA2B,CACzBd,QADyB,SACjB0B,GACNtD,KAAKqD,yBAAyBC,EAAQtD,KAAKiD,cAE7CP,MAAM,IAIVa,QAAS,CACPF,yBADO,SACkBG,EAAYP,GACnCjD,KAAKoD,mBAAqBpD,KAAKyD,YAAYD,EAAYP,IAEzDQ,YAJO,SAIKD,EAAYP,GACtB,GAAKO,EAAL,CAEA,IAAIE,EAEJ,IAEEA,EAAkBC,KAAKC,MAAMD,KAAKE,UAAUL,IAC5C,SACA,IAAMM,EAAiBH,KAAKE,UAAUL,EAAY,KAAM,GACxD,MAAM,IAAIO,MAAJ,iDACsCD,IAI9C,OAAO9D,KAAKgE,4BAA4BN,EAAiBT,KAI3De,4BAvBO,SAuBqBR,EAAYP,GACtC,GAAKO,EAAL,CAEA,GAAI,SAAUA,GAAc,OAAQA,EAClC,OAAOS,OAAOhB,EAAYO,EAAWU,SAAWD,OAAOT,EAAWW,IAGpE,GAAI,cAAeX,GAAc,aAAcA,EAAY,CAEzD,IAAMY,EAAcZ,EAAWa,SAASC,QACpCC,EAAUvE,KAAKgE,4BACjBI,EACAnB,GAGF,MAAOO,EAAWgB,UAAUC,OAAQ,CAElC,IAAMC,EAAWlB,EAAWgB,UAAUF,QACtC,GAAiB,QAAbI,EAAJ,CAMA,IAAMC,EAAenB,EAAWa,SAASC,QACrCM,EAAW5E,KAAKgE,4BAClBW,EACA1B,GAIE4B,EAAerB,EAAWgB,UAAUF,QACxC,MAAwB,QAAjBO,EACLD,GAAYA,EACZC,EAAerB,EAAWgB,UAAUF,QAMtC,OAJIO,GACFrB,EAAWgB,UAAUM,QAAQD,GAGvBH,GACN,IAAK,MACHH,EAAUA,GAAWK,EACrB,MACF,IAAK,KACHL,EAAUA,GAAWK,EACrB,MACF,QACE,MAAM,IAAIb,MAAJ,mBAAsBW,EAAtB,uBA7BRH,GAAWA,EAiCf,OAAOA,EAGT,IAAMT,EAAiBH,KAAKE,UAAUL,EAAY,KAAM,GACxD,MAAM,IAAIO,MAAJ,oCAAuCD,S,0KCjH7CiB,EAAmB,yCAAH,IAEpBC,SAFuB,EAGvBC,gBAHuB,EAIvBC,YAAY,IAIC,qBAAe,CAC5BnE,KAD4B,iBAG5BC,MAAO,CACLmE,cAAe,CACbjE,KADa,QAEbE,SAAS,GAEXgE,gBAAiB,CACflE,KADe,QAEfE,SAAS,GAEXiE,OAAQ,CACNnE,KADM,SAENE,QAAS,gBACP,OAAOkE,EAAA,4BAAqCC,EAArC,sBAAP,IAGJC,WAfK,QAgBLC,UAAW,CACTvE,KAAM,+BADG,KAETE,QAAS,kBAAM2D,IAEjBW,SApBK,QAqBLC,YAAa,CACXzE,KAAM+C,SAIVhD,KA7B4B,WA8B1B,MAAO,CACL2E,WAAY5F,KAAK2F,cAIrBxC,SAAU,CACR0C,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,kBAFK,EAGL,qCAAsC7F,KAAK8F,eAAiB,KAGhEC,cARQ,WASN,OAAO/F,KAAP,eAEFgG,eAXQ,WAWM,WACZ,OAAOhG,KAAKiG,cAAcC,KAAI,SAAAC,GAAI,OAAI,WAAtC,OAEFC,kBAdQ,WAcS,WACf,OAAOpG,KAAKqG,aACRrG,KAAKsG,cAAcC,MAAK,SAAAJ,GAAI,OAAK,UAD9B,MAEHnG,KAAKsG,cAAc7B,OAFvB,GAIF+B,aAnBQ,WAoBN,aAAIxG,KAAKyG,aAA6B,EAE/BxC,OAAOjE,KAAK0G,QAAQ1G,KAApB,eAAP,QAEFsG,cAxBQ,WAwBK,WACX,OAAKtG,KAAD,aAAqBA,KAArB,UAAJ,MAA0CA,KAAK2G,eAA+B3G,KAAP,SAEhEA,KAAK4G,SAASvB,QAAO,SAAAc,GAC1B,IAAM3F,EAAQ,eAAoB2F,EAAM,EAAxC,UACMU,EAAO,MAAArG,EAAgByD,OAAhBzD,GAAb,GAEA,OAAO,WAAkByD,OAAO,EAAzB,gBAAP,OAGJ0C,eAAgB,CACdG,IADc,WAEZ,OAAO9G,KAAP,YAEF+G,IAJc,SAIX,GAGG/G,KAAK4F,aAAT,IACE5F,KAAA,aACAA,KAAA,kCAINgH,kBA/CQ,WAgDN,UAEFC,QAlDQ,WAmDN,OAAOjH,KAAKkH,eAAiBlH,KAAKiG,cAAcxB,OAAhD,GAEF0C,YArDQ,WAsDN,OACEnH,KAAKoH,UACLpH,KAFK,eAILA,KAAKkH,eACLlH,KAAK2G,iBAAmB3G,KAAK0G,QAAQ1G,KALvC,eAQFqH,YA9DQ,WA+DN,QAAKrH,KAAL,YAEOA,KAAKoG,oBAAsBpG,KAAlC,aAEFsH,YAnEQ,WAoEN,IAAMtG,EAAQ,yCAAd,MAEA,OADCA,EAAA,aAA6B,kCAA4BA,EAAA,cAA5B,IAA7B,OACD,iCAAO,GAEFA,IAGPkG,cA3EQ,WA4EN,OAA8B,MAAvBlH,KAAK2G,gBAAZ,KACE3G,KAAK2G,gBAETF,aA/EQ,WA+EI,WACV,OAAIzG,KAAJ,SAA0B,KAEnBA,KAAKiG,cAAcsB,MAAK,SAAAC,GAC7B,OAAO,kBAAqB,WAArB,GAAuC,WAAc,EAA5D,oBAGJC,SAtFQ,WAuFN,IAAMxG,EAAO,sCAAb,MAaA,OAXAA,EAAA,uCACKA,EADQ,OAAb,IAEEyG,MAAO1H,KAFI,iBAGX0F,SACE1F,KAAK0F,WACJ1F,KADD,cAECA,KAAKsG,cANG,OAQXX,YAAa3F,KAAK2G,iBAGpB,IAIJjF,MAAO,CACL4E,cADK,yBAELqB,cAFK,YAGLC,UAHK,SAGI,GACP,GACEC,SAAA,wBAAkC7H,KAAlC,QACAA,KAAA,aAAoBA,KAAK8H,MAAMC,MAA/B,WAEAF,SAAA,2BAAqC7H,KAArC,QACAA,KAAA,aAAoBA,KAAK8H,MAAMC,MAA/B,OACA/H,KAAA,eAGJgI,aAbK,SAaO,IACNC,GAAQjI,KAAZ,UAEAA,KAAA,kBAEF0H,MAlBK,SAkBA,KAOCQ,GAAUA,EAAZ,SACAlI,KADA,aAEAA,KAFA,WAGCA,KAHD,eAIAiI,EALF,QAMEjI,KAAKmI,gBAETxC,YAhCK,SAgCM,GACT3F,KAAA,cAEF2G,eAnCK,0BAoCLrB,SAAU,cAGZzC,QAlL4B,WAmL1B7C,KAAA,aAGFoI,UAtL4B,WAuL1BP,SAAA,2BAAqC7H,KAArC,SAGFuD,QAAS,CACP8E,uBADO,SACe,KAA+B,WAG/CJ,IAAJ,IAEAjI,KAAA,iBAEAA,KAAA,WAAe,WAEV,EAAD,iBACC,IAAAiI,EAAA,QACE,EAHL,mBAMA,wBACA,wBAGJK,wBAnBO,WAoBLtI,KAAA,wBAEFuI,qBAtBO,WAwBLvI,KAAA,cAAqBA,KAAK8H,MAA1B,MAAwC9H,KAAK8H,MAAMU,KAAnD,oBAEFC,oBA1BO,SA0BY,GAGbzI,KAAJ,gBAEIA,KAAKoH,UAAYsB,IAAY,OAAjC,MACE,IAAI1I,KAAK8F,cACP9F,KAAA,cAAqBA,KAAKiG,cAAcxB,OAAxC,EAEAzE,KAAA,gBAEOA,KAAKoH,UAAYsB,IAAY,OAAjC,MACD1I,KAAK8F,eAAiB9F,KAAKiG,cAAcxB,OAA7C,EACEzE,KAAA,iBAEAA,KAAA,gBAEO0I,IAAY,OAAZ,WAAkCA,IAAY,OAAlD,QACL1I,KAAA,sBAGJ2I,kBA/CO,WAgDL,IAAMC,EAAW5I,KAAjB,cACM6I,EAAU7I,KAAKiG,cAFN,GAKf,GACGjG,KAAD,gBACAA,KAAKyD,YAFP,IAKA,IAAMqF,EAAY9I,KAAKiG,cAAcxB,OAVtB,EAcf,IACE,IAAAzE,KAAK8F,eADP,IAEEgD,EAFF,CASA,IAAMrE,EAASzE,KAAKiG,cAApB,OACM8C,EAAYH,IAAanE,EAAb,EAAAmE,EAEdA,EAFJ,EAGMI,EAAWhJ,KAAKiG,cAAtB,GAEA,EAGEjG,KAAA,cAFAA,KAAA,SAAcA,KAAKoH,SAAW,GAA9B,MAKFpH,KAAA,qBAjBEA,KAAA,kBAmBJiJ,kBApFO,WAqFLjJ,KAAA,oBAEA,qDAEFkJ,SAzFO,WA0FL,IAAMnB,EAAQ,qCAAd,MAUA,OARAA,EAAA,KAAa,eAAUA,EAAD,KAAc,CAClCoB,MAAO,CACL,wBAAyB,eAAqBnJ,KAAK8H,MAAN,KADxC,iBAELsB,aAAc,eAAqBrB,EAAD,kCAEpCsB,SAAU,CAAE7I,MAAOR,KAAK2G,kBAG1B,GAEF2C,aAtGO,WAuGL,IAAMC,EAAO,yCAAb,MAIA,OAFAA,EAAA,2BAEA,GAEFC,cA7GO,WA8GL,OAAOxJ,KAAKyJ,SAAWzJ,KAAhB,SACH,0CADGA,MAAP,IAIF0J,QAlHO,SAkHA,GACA1J,KAAL,gBAEAA,KAAA,iBACKA,KAAK8F,eADV,EAEI9F,KAFJ,UAIKA,KAAK2J,cAAcC,EAAxB,SAAmC5J,KAAKmI,iBAE1C0B,QA3HO,SA2HA,GACL,KACE7J,KAAK8F,eAAL,IACC8D,EAFH,QAKA,IAAME,EAASF,EAAf,OACMpJ,EAAQsJ,EAPC,MAUXA,EAAJ,OAAkB9J,KAAKmI,eAEvBnI,KAAA,iBACAA,KAAA,SAAgB8J,EAAA,UAAmBA,EAAA,SAAnC,WAEFC,UA1IO,SA0IE,GACP,IAAMrB,EAAUkB,EAAhB,SAGEA,EAAA,SACC,CAAC,OAAD,KAAgB,OAAhB,cAFH,IAIE,8CAOF5J,KAAA,wBAEFgK,YA1JO,SA0JI,KACXC,UA3JO,SA2JE,GACP,8CACAjK,KAAA,cAEFkK,SA/JO,SA+JC,GAENN,EAFgB,iBAOhB5J,KAAA,gBAEFmK,WAxKO,SAwKG,GACR,+CACAnK,KAAA,aAEFoK,iBA5KO,WA6KL,6CADc,MAKTpK,KAAL,WAAqBA,KAAKqK,aAE5BA,UAnLO,WAmLE,WAGPrK,KAAA,WAAe,WAEV,EAAD,UACC,EADD,gBAEC,EAHH,eAKE,kBACG,gBAAD,QACA,EADA,UAEA,EAHoB,aAMlB,UAAa,EANjB,mBAUNsK,WAtMO,YAuMAtK,KAAD,eACDA,KADH,iBAIKA,KAAKuK,gBACRvK,KADG,eAEHA,KAAKwK,SAASxK,KAFhB,iBAIEA,KAAA,cAGJyK,QAlNO,SAkNA,GACL,OAAOzK,KAAKgG,eAAe0E,QAAQ1K,KAAKwK,SAAjC,KAAP,GAEFG,OArNO,SAqND,GAAuB,QAC3B,QAAI3K,KAAK8F,cAAT,CAEA,IAAM8E,EAAc5K,KAAKiG,cAAcjG,KAAvC,eACM6K,EAAkB7K,KAAK0G,QAA7B,GACA,SAAAoE,EAAA,0CACA,SAAAA,EAAA,wEACAA,EAAA","file":"js/chunk-7786a68d.778ae83b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-flex',{style:(_vm.style)},[_c('v-autocomplete',_vm._b({model:{value:(_vm.innerValue),callback:function ($$v) {_vm.innerValue=$$v},expression:\"innerValue\"}},'v-autocomplete',_vm.comboboxAttrs,false))],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-flex :style=\"style\">\r\n    <v-autocomplete\r\n      v-model=\"innerValue\"\r\n      v-bind=\"comboboxAttrs\"\r\n    ></v-autocomplete>\r\n  </v-flex>\r\n</template>\r\n\r\n<script>\r\nimport disabledMixin from \"./disabledMixin.js\";\r\n\r\nexport default {\r\n  name: \"TMultiSelect\",\r\n\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    value: {\r\n      type: undefined,\r\n    },\r\n    formDisabled: {\r\n      type: [Boolean, undefined],\r\n      default: undefined,\r\n    },\r\n  },\r\n\r\n  mixins: [disabledMixin],\r\n\r\n  data() {\r\n    return {\r\n      style: {},\r\n      comboboxAttrs: {},\r\n      innerValue: [],\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    disabled(disabled) {\r\n      this.comboboxAttrs.disabled = disabled;\r\n    },\r\n    data: {\r\n      handler(data) {\r\n        this.style = {\r\n          width: data.width,\r\n          margin: data.margin,\r\n          backgroundColor: data.backgroundColor,\r\n          flexGrow: data.grow,\r\n          flexShrink: data.shrink,\r\n          marginTop: data.marginTop,\r\n          marginLeft: data.marginLeft,\r\n          marginBottom: data.marginBottom,\r\n          marginRight: data.marginRight,\r\n        };\r\n        this.comboboxAttrs = {\r\n          dense: data.dense,\r\n          [data.style]: true,\r\n          items: data.time,\r\n          multiple: data.multiple,\r\n          hideDetails: true,\r\n          disabled: this.disabled,\r\n          menuProps: {\r\n            maxHeight: data.menuHeight,\r\n          },\r\n          // chips: true,\r\n          // smallChips: true,\r\n        };\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n    value(newValue) {\r\n      this.innerValue = newValue;\r\n    },\r\n    innerValue(newValue) {\r\n      this.$emit(\"input\", newValue);\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.innerValue = this.value;\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TTimeIntervalSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TTimeIntervalSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TTimeIntervalSelect.vue?vue&type=template&id=3aada61f&\"\nimport script from \"./TTimeIntervalSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./TTimeIntervalSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAutocomplete,VFlex})\n","export default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    bindingData: {\r\n      type: Object,\r\n      deafult: () => {},\r\n    },\r\n    formDisabled: {\r\n      type: [Boolean, undefined],\r\n      default: undefined,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    disabled() {\r\n      // 表單被 disabled 的條件 (this.disabled) 優先，\r\n      // 其次是元素的 disabled (this.data.dislabed)\r\n      // 最後才是條件式的 disabled\r\n      return (\r\n        this.formDisabled ??\r\n        (this.data.disabled !== \"conditions\"\r\n          ? this.data.disabled\r\n          : this.disabledConditions)\r\n      );\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      disabledConditions: null,\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    bindingData: {\r\n      handler(bindingData) {\r\n        const disabledConditions = this.data[\"disabledConditions\"];\r\n        this.updateDisabledConditions(disabledConditions, bindingData);\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n    \"data.disabledConditions\": {\r\n      handler(newVal) {\r\n        this.updateDisabledConditions(newVal, this.bindingData);\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    updateDisabledConditions(conditions, bindingData) {\r\n      this.disabledConditions = this.getDisabled(conditions, bindingData);\r\n    },\r\n    getDisabled(conditions, bindingData) {\r\n      if (!conditions) return;\r\n\r\n      let conditionsClone;\r\n\r\n      try {\r\n        //  prevent conditions from mutating\r\n        conditionsClone = JSON.parse(JSON.stringify(conditions));\r\n      } catch {\r\n        const CONDITIONS_STR = JSON.stringify(conditions, null, 2);\r\n        throw new Error(\r\n          `disabled conditions can't be parse. \\n ${CONDITIONS_STR}`\r\n        );\r\n      }\r\n\r\n      return this.calculateDisabledConditions(conditionsClone, bindingData);\r\n    },\r\n    // 考慮例外處理: conditions: null, undefined, {}, 過多的 operator, bindingData 找不到值\r\n    // 使用後序 (postfix) 的運算規則\r\n    calculateDisabledConditions(conditions, bindingData) {\r\n      if (!conditions) return;\r\n\r\n      if (\"when\" in conditions && \"is\" in conditions) {\r\n        return String(bindingData[conditions.when]) === String(conditions.is);\r\n      }\r\n\r\n      if (\"operators\" in conditions && \"operands\" in conditions) {\r\n        // 計算左值\r\n        const leftOperand = conditions.operands.shift();\r\n        let leftVal = this.calculateDisabledConditions(\r\n          leftOperand,\r\n          bindingData\r\n        );\r\n\r\n        while (conditions.operators.length) {\r\n          // 檢查運算元是否為 not，是的話則反向左值, 直到不是 not 為止\r\n          const operator = conditions.operators.shift();\r\n          if (operator === \"not\") {\r\n            leftVal = !leftVal;\r\n            continue;\r\n          }\r\n\r\n          // 計算右值\r\n          const rightOperand = conditions.operands.shift();\r\n          let rightVal = this.calculateDisabledConditions(\r\n            rightOperand,\r\n            bindingData\r\n          );\r\n\r\n          // 檢查下個運算元是否為 not，的話則反向右值，直到不是 not 為止\r\n          let nextOperator = conditions.operators.shift();\r\n          while (nextOperator === \"not\") {\r\n            rightVal = !rightVal;\r\n            nextOperator = conditions.operators.shift();\r\n          }\r\n          if (nextOperator) {\r\n            conditions.operators.unshift(nextOperator);\r\n          }\r\n\r\n          switch (operator) {\r\n            case \"and\":\r\n              leftVal = leftVal && rightVal;\r\n              break;\r\n            case \"or\":\r\n              leftVal = leftVal || rightVal;\r\n              break;\r\n            default:\r\n              throw new Error(`operator ${operator} is invalid.`);\r\n          }\r\n        }\r\n\r\n        return leftVal;\r\n      }\r\n\r\n      const CONDITIONS_STR = JSON.stringify(conditions, null, 2);\r\n      throw new Error(`conditions is invalid. \\n ${CONDITIONS_STR}`);\r\n    },\r\n  },\r\n};\r\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}