{"version":3,"sources":["webpack:///./src/components/template/TImageInput.vue?965e","webpack:///src/components/template/TImageInput.vue","webpack:///./src/components/template/TImageInput.vue?7452","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./src/components/template/TImageInput.vue","webpack:///../../../src/components/VTextField/index.ts"],"names":["_vm","this","_h","$createElement","_c","_self","attrs","on","e","stopPropagation","staticRenderFns","name","props","data","type","Object","default","value","undefined","disabled","Boolean","components","watch","created","methods","VTextField","model","prop","event","chips","clearable","counterSizeString","counterString","hideInput","placeholder","prependIcon","readonly","showSize","validator","v","includes","smallChips","truncateLength","Number","val","computed","classes","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","isFocused","map","file","truncatedText","hasChips","handler","console","immediate","$refs","input","clearableCallback","genChips","small","genControl","render","display","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","staticClass","class","selection","genTextFieldSlot","node","click","onInput","files","onKeyDown","truncateText","str","charsKeepOneSide","Math","component","VFileInput"],"mappings":"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","file":"js/chunk-8789e96e.b0912700.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-file-input',{attrs:{\"accept\":\"image/*\",\"label\":\"File input\"},on:{\"click\":function (e){ return e.stopPropagation(); }}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-file-input\r\n    accept=\"image/*\"\r\n    label=\"File input\"\r\n    @click=\"(e)=>e.stopPropagation()\"\r\n  ></v-file-input>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"TImageInput\",\r\n\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    value: {\r\n      type: undefined,\r\n    },\r\n    disabled: {\r\n      type: [Boolean, undefined],\r\n      default: undefined,\r\n    },\r\n  },\r\n\r\n  components: {\r\n  },\r\n\r\n  data() {\r\n    return {\r\n\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    data: {}\r\n  },\r\n\r\n  created() {\r\n  },\r\n\r\n  methods: {\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TImageInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TImageInput.vue?vue&type=script&lang=js&\"","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./TImageInput.vue?vue&type=template&id=716ffa6e&\"\nimport script from \"./TImageInput.vue?vue&type=script&lang=js&\"\nexport * from \"./TImageInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\ninstallComponents(component, {VFileInput})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n"],"sourceRoot":""}